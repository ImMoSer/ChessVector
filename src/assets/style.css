/* src/assets/style.css */

:root {
  --header-height: 60px;
  --color-bg-primary: #161512;
  --color-bg-secondary: #262421;
  --color-bg-tertiary: #33312e;
  --color-text-default: #eaeaea;
  --color-text-muted: #a0a0a0;
  --color-text-on-accent: #ffffff;
  --color-text-error: #ffcdd2;
  --color-text-link: var(--color-accent-info);
  --color-border: #33312e;
  --color-border-hover: #4d4a47;
  --color-accent-primary: #bf811d;
  --color-accent-secondary: #907bff;
  --color-accent-success: #629924;
  --color-accent-warning: #e46a09;
  --color-accent-error: #cc3432;
  --color-accent-info: #0072b1;
  --color-accent-special: #b72fc6;

  --left-panel-width: 240px; 
  --initial-center-panel-width: 480px; 
  --right-panel-width: 280px;
  --resize-handle-visual-size: 16px; 
  --resize-handle-clickable-size: 24px; 
  --page-vertical-padding: 10px; /* Отступы для #page-content-wrapper */
}

html, body {
  margin: 0;
  padding: 0;
  font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
  font-size: 15px;
  line-height: 1.6;
  background-color: var(--color-bg-primary);
  color: var(--color-text-default);
  height: 100vh; 
  overflow: hidden; 
}

*, *::before, *::after {
  box-sizing: border-box;
}

#app-layout {
  display: flex;
  flex-direction: column;
  height: 100vh; 
}

#app-header {
  background-color: var(--color-bg-secondary);
  color: var(--color-text-default);
  display: flex;
  align-items: center;
  width: 100%;
  height: var(--header-height);
  padding: 0 15px;
  border-bottom: 1px solid var(--color-border);
  z-index: 1000;
  flex-shrink: 0;
}

.nav-header-content {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
}

.app-title {
  font-size: 1.2em;
  font-weight: 600;
  white-space: nowrap;
  margin-right: 20px;
}

.nav-toggle-button {
  background: none;
  border: none;
  color: var(--color-text-muted);
  cursor: pointer;
  font-size: 1.5em;
  padding: 5px;
  line-height: 1;
  display: none; 
  margin-left: auto;
}

.nav-links {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.nav-links li {
  margin-left: 5px;
}
.nav-links li:first-child {
  margin-left: 0;
}

.nav-links li a {
  display: block;
  padding: 8px 12px;
  color: var(--color-text-muted);
  text-decoration: none;
  white-space: nowrap;
  border-radius: 4px;
  transition: background-color 0.2s ease, color 0.2s ease;
}

.nav-links li a:hover,
.nav-links li a.active {
  background-color: var(--color-bg-tertiary);
  color: var(--color-text-default);
}

#page-content-wrapper {
  flex-grow: 1; 
  display: flex; 
  justify-content: center; 
  align-items: flex-start; /* Выравниваем весь блок .three-column-layout по верху */
  overflow: hidden; 
  height: calc(100vh - var(--header-height)); 
  padding-top: var(--page-vertical-padding); 
  padding-bottom: var(--page-vertical-padding); 
}

.three-column-layout {
  display: flex;
  flex-direction: row;
  width: auto; 
  max-width: 100%; 
  /* Высота будет определяться самым высоким элементом, если align-items: stretch */
  /* или высотой контента, если align-items: flex-start */
  /* height: 100%; -- Убрано, чтобы высота определялась контентом или была ограничена */
  align-items: stretch; /* ИЗМЕНЕНО: Заставляет все колонки иметь одинаковую высоту (самой высокой) */
  max-height: 100%; /* Ограничиваем высоту трехколоночного макета высотой родителя */
}

#left-panel, #right-panel {
  background-color: var(--color-bg-secondary);
  padding: 15px;
  overflow-y: auto; 
  flex-shrink: 0; 
  box-shadow: 0 0 10px rgba(0,0,0,0.2);
  /* height: 100%; -- Удалено, высота будет управляться align-items: stretch родителя */
}

#left-panel {
  width: var(--left-panel-width);
  border-right: 1px solid var(--color-border);
}

#right-panel {
  width: var(--right-panel-width);
  border-left: 1px solid var(--color-border);
}

#center-panel-resizable-wrapper {
  position: relative; 
  display: flex; /* Для правильного поведения aspect-ratio дочернего элемента */
  /* align-items и justify-content здесь не так важны, если #center-panel занимает 100% */
  width: var(--initial-center-panel-width); /* Управляется JS */
  min-width: 300px; 
  flex-shrink: 0;
  /* Высота этой обертки будет определяться шириной из-за #board-wrapper с aspect-ratio */
  /* Не устанавливаем height или max-height здесь, они будут косвенно ограничены */
}

#center-panel { 
  width: 100%;
  /* height: 100%; -- Удалено, высота будет от #board-wrapper */
  display: flex; /* Для центрирования #board-wrapper, если он будет меньше (из-за max-width/max-height) */
  justify-content: center;
  align-items: center; 
}

.resize-handle-center {
  position: absolute;
  right: calc(-1 * var(--resize-handle-clickable-size) / 2 + var(--resize-handle-visual-size) / 2 - 2px); 
  bottom: calc(-1 * var(--resize-handle-clickable-size) / 2 + var(--resize-handle-visual-size) / 2 - 2px);
  width: var(--resize-handle-clickable-size); 
  height: var(--resize-handle-clickable-size);
  cursor: nwse-resize;
  z-index: 50;
  display: block; 
}
.resize-handle-center::before,
.resize-handle-center::after {
  content: '';
  position: absolute;
  background-color: var(--color-text-muted);
  border-radius: 1px;
}
.resize-handle-center::before { 
  bottom: 4px; 
  right: 4px;
  width: var(--resize-handle-visual-size);
  height: 3px;
}
.resize-handle-center::after { 
  bottom: 4px;
  right: 4px;
  width: 3px;
  height: var(--resize-handle-visual-size);
}
.resize-handle-center:hover::before,
.resize-handle-center:hover::after {
  background-color: var(--color-accent-primary);
}

#board-wrapper { 
    width: 100%; /* Занимает всю ширину #center-panel */
    display: flex; /* Не обязательно, если #board-container единственный ребенок */
    /* justify-content: center; */
    /* align-items: center; */
    aspect-ratio: 1 / 1; /* Ключ к квадратной доске и определению высоты родителя */
    /* Ограничение максимального размера доски, чтобы она не вылезала за пределы окна */
    /* max-width остается, max-height тоже, чтобы JS мог на них ориентироваться */
    max-width: calc(100vh - var(--header-height) - (2 * var(--page-vertical-padding))); 
    max-height: calc(100vh - var(--header-height) - (2 * var(--page-vertical-padding)));
}
#board-container { /* Контейнер для chessground */
    width: 100%; 
    height: 100%; /* Заполняет квадратный #board-wrapper */
}

body.board-resizing {
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  cursor: nwse-resize !important;
}

@media (orientation: portrait), (max-width: 768px) { 
  #page-content-wrapper {
    align-items: flex-start; 
    padding: 0; /* Убираем внешние отступы для контента страницы */
    overflow-y: auto; 
  }

  .three-column-layout.portrait-mode-layout { 
    flex-direction: column;
    align-items: center; 
    width: 100%; 
    height: auto; 
    padding: var(--page-vertical-padding); /* Внутренние отступы для всего блока */
  }

  #left-panel.portrait-mode-layout { 
    display: none; 
  }
  
  #right-panel.portrait-mode-layout {
    order: 3; 
    width: 100%; 
    max-width: 100%; 
    height: auto; 
    min-height: auto; 
    border-left: none;
    border-right: none;
    border-top: 1px solid var(--color-border); 
    margin-top: 20px; 
    padding: 15px; 
    box-shadow: none; /* Убираем тень в портретном режиме */
  }
  
  #center-panel-resizable-wrapper.portrait-mode-layout {
    order: 1; /* ИЗМЕНЕНО: Доска теперь первая */
    width: 100% !important; 
    max-width: 100%; 
    min-width: unset;
    height: auto; /* Высота будет определяться доской */
    /* margin-bottom: 20px; -- Убрано, т.к. правая панель теперь под ней */
  }
  
  #board-wrapper.portrait-mode-layout { 
      max-width: 100%; 
      max-height: none; 
      /* Можно добавить padding, если нужно, чтобы доска не прилипала к краям экрана */
      /* padding: 0 10px; */
  }

  .resize-handle-center { 
    display: none !important; 
  }

  .nav-toggle-button { display: block; }
  .nav-links { 
    display: none; 
    position: absolute;
    top: var(--header-height);
    left: 0;
    width: 100%;
    background-color: var(--color-bg-secondary);
    flex-direction: column;
    box-shadow: 0 4px 10px rgba(0,0,0,0.3);
  }
  #app-header.menu-open .nav-links { 
    display: flex;
  }
}

.button {
  padding: 8px 15px;
  border-radius: 4px;
  border: 1px solid var(--color-border-hover);
  background-color: var(--color-bg-tertiary);
  color: var(--color-text-default);
  cursor: pointer;
  font-size: 0.95em;
  transition: background-color 0.2s ease, border-color 0.2s ease;
}
.button:hover:not(:disabled) {
  background-color: var(--color-border-hover);
  border-color: var(--color-accent-primary);
}
.button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}
.button.primary-button {
  background-color: var(--color-accent-primary);
  border-color: var(--color-accent-primary);
  color: var(--color-text-on-accent);
}
.button.primary-button:hover:not(:disabled) {
  background-color: var(--color-accent-warning); 
  border-color: var(--color-accent-warning);
}

.puzzle-container {}

.puzzle-details, .expected-move {
  font-size: 0.9em;
  margin-top: 5px;
  margin-bottom: 5px;
}
.expected-move {
  color: var(--color-text-muted);
}
