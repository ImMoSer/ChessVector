/* src/assets/style.css */

:root {
  /* Изменено: высота хедера в vh */
  --header-height: 5vh;

  /* Цветовая палитра (остается без изменений) */
  --color-bg-primary: #161512;
  --color-bg-secondary: #262421;
  --color-bg-tertiary: #33312e;
  --color-text-default: #eaeaea;
  --color-text-muted: #a0a0a0;
  --color-text-on-accent: #ffffff;
  --color-text-error: #ffcdd2;
  --color-text-link: var(--color-accent-info);
  --color-border: #33312e;
  --color-border-hover: #4d4a47;
  --color-accent-primary: #bf811d;
  --color-accent-secondary: #907bff;
  --color-accent-success: #629924;
  --color-accent-warning: #e46a09;
  --color-accent-error: #cc3432;
  --color-accent-info: #0072b1;
  --color-accent-special: #b72fc6;

  /* Размеры боковых панелей (остаются в px, т.к. AppController их читает в px) */
  --panel-width: 350px; /* Ширина боковых панелей */

  /* Отступы и радиусы (остаются в px) */
  --page-vertical-padding: 10px; /* Этот отступ теперь менее критичен для расчета высоты доски, т.к. BOARD_MAX_VH учитывает всю высоту */
  --panel-gap: 10px;
  --panel-border-radius: 8px;

  /* Новая переменная для размера доски, устанавливаемая из JS (AppController) */
  /* Предоставим дефолтное значение на случай, если JS не успел ее установить */
  --calculated-board-size-vh: 70vh; /* Примерное дефолтное значение */
}

html, body {
  margin: 0;
  padding: 0;
  font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
  font-size: 15px; /* Базовый размер шрифта, может быть адаптирован с rem */
  line-height: 1.6;
  background-color: var(--color-bg-primary);
  color: var(--color-text-default);
  height: 100vh;
  overflow: hidden; /* Предотвращает прокрутку всей страницы */
}

*, *::before, *::after {
  box-sizing: border-box;
}

#app-layout {
  display: flex;
  flex-direction: column;
  height: 100vh; /* Занимает всю высоту окна просмотра */
}

#app-header {
  background-color: var(--color-bg-secondary);
  color: var(--color-text-default);
  display: flex;
  align-items: center;
  width: 100%;
  height: var(--header-height); /* Используем новую переменную */
  padding: 0 15px;
  border-bottom: 1px solid var(--color-border);
  z-index: 1000;
  flex-shrink: 0; /* Хедер не должен сжиматься */
}

.nav-header-content {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
}

.app-title {
  font-size: 1.2em;
  font-weight: 600;
  white-space: nowrap;
  margin-right: 20px;
}

.nav-toggle-button {
  background: none;
  border: none;
  color: var(--color-text-muted);
  cursor: pointer;
  font-size: 1.5em;
  padding: 5px;
  line-height: 1;
  display: none; /* Будет показан через медиа-запрос */
  margin-left: auto;
}

.nav-links {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.nav-links li {
  margin-left: 5px;
}
.nav-links li:first-child {
  margin-left: 0;
}

.nav-links li a {
  display: block;
  padding: 8px 12px;
  color: var(--color-text-muted);
  text-decoration: none;
  white-space: nowrap;
  border-radius: 4px;
  transition: background-color 0.2s ease, color 0.2s ease;
}

.nav-links li a:hover,
.nav-links li a.active {
  background-color: var(--color-bg-tertiary);
  color: var(--color-text-default);
}

#page-content-wrapper {
  flex-grow: 1; /* Занимает оставшееся пространство по высоте */
  display: flex;
  justify-content: center; /* Центрирует .three-column-layout по горизонтали */
  align-items: center; /* Центрирует .three-column-layout по вертикали */
  overflow: hidden; /* Предотвращает прокрутку, если контент больше */
  /* Высота теперь calc(100vh - var(--header-height)) не нужна, flex-grow сделает свое дело */
  padding-top: var(--page-vertical-padding);
  padding-bottom: var(--page-vertical-padding);
  padding-left: var(--panel-gap); /* Боковые отступы для всего контента страницы */
  padding-right: var(--panel-gap);
}

.three-column-layout {
  display: flex;
  flex-direction: row;
  width: 100%; /* Занимает всю доступную ширину от #page-content-wrapper */
  height: 100%; /* Занимает всю доступную высоту от #page-content-wrapper */
  max-width: 100%;
  max-height: 100%;
  align-items: stretch; /* Панели растягиваются по высоте */
  justify-content: center;
  gap: var(--panel-gap);
}

#left-panel, #right-panel {
  background-color: var(--color-bg-secondary);
  padding: 15px;
  overflow-y: auto;
  flex-shrink: 0; /* Панели не должны сжиматься меньше их --xxx-panel-width */
  box-shadow: 0 0 10px rgba(0,0,0,0.2);
  border-radius: var(--panel-border-radius);
  display: flex; /* Для возможного внутреннего выравнивания, если понадобится */
  flex-direction: column; /* Чтобы контент внутри панели мог расти */
}

#left-panel {
  width: var(--panel-width);
}

#right-panel {
  width: var(--panel-width);
}

/* Центральная панель-обертка */
#center-panel-resizable-wrapper {
  /* Этот элемент теперь будет квадратным и его размер будет управляться --calculated-board-size-vh */
  width: var(--calculated-board-size-vh);
  height: var(--calculated-board-size-vh);
  min-width: 0; /* Сбрасываем min-width, так как размер управляется vh */
  flex-shrink: 0; /* Не сжиматься и не растягиваться, размер фиксирован JS через CSS var */
  display: flex; /* Для центрирования #center-panel, если он не 100% */
  justify-content: center;
  align-items: center;
  position: relative; /* Для возможного абсолютного позиционирования внутри, если понадобится */
  border-radius: var(--panel-border-radius);
  overflow: hidden; /* Обрезать содержимое, если оно выходит за рамки (например, тень доски) */
  background-color: var(--color-bg-secondary); /* Фон для области, если доска меньше */
}

/* Сама центральная панель, где будет доска */
#center-panel {
  width: 100%; /* Занимает всю ширину #center-panel-resizable-wrapper */
  height: 100%; /* Занимает всю высоту #center-panel-resizable-wrapper */
  display: flex;
  justify-content: center;
  align-items: center;
  /* aspect-ratio: 1 / 1; УДАЛЕНО, т.к. родитель теперь квадратный */
}

/* src/assets/style.css - добавить или раскомментировать */
.resize-handle-center {
  position: absolute;
  right: 0;
  bottom: 0;
  width: 24px; /* var(--resize-handle-clickable-size) */
  height: 24px; /* var(--resize-handle-clickable-size) */
  cursor: nwse-resize;
  z-index: 50; /* Должен быть поверх доски, но под другими элементами UI, если есть */
  /* Можно добавить визуальный индикатор, если хотите */
  /* background-color: rgba(255, 0, 0, 0.1); */
  /* border-radius: 50%; */
}

/* Для стилизации курсора во время перетаскивания */
body.board-resizing {
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  cursor: nwse-resize !important; /* Важно, чтобы переопределить другие курсоры */
}
body.board-resizing * { /* Предотвратить выделение текста во время перетаскивания */
    user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
}

/* Обертка для доски внутри центральной панели */
#board-wrapper {
    width: 100%; /* Занимает 100% от #center-panel */
    height: 100%; /* Занимает 100% от #center-panel */
    display: flex; /* Для центрирования #board-container, если он меньше (хотя он 100%) */
    justify-content: center;
    align-items: center;
    /* aspect-ratio: 1 / 1; УДАЛЕНО */
    /* max-width и max-height УДАЛЕНЫ, размер диктуется родителем */
}

/* Контейнер, в который Chessground встраивает свою доску */
#board-container {
    width: 100%;
    height: 100%;
}


/* Медиа-запросы для адаптивности */
@media (orientation: portrait), (max-width: 768px) {
  #page-content-wrapper {
    align-items: flex-start; /* В портретном режиме контент может быть выше */
    padding-top: var(--panel-gap); /* Уменьшаем верхний отступ для экономии места */
    padding-bottom: var(--panel-gap);
    overflow-y: auto; /* Разрешаем прокрутку, если контент не помещается */
  }

  .three-column-layout.portrait-mode-layout {
    flex-direction: column;
    align-items: center; /* Центрируем панели по горизонтали */
    width: 100%;
    height: auto; /* Высота по содержимому */
    /* padding уже есть у #page-content-wrapper */
  }

  #left-panel.portrait-mode-layout { /* Если вы решите его показывать в портретном режиме */
    /* display: none; /* Если скрывать */
    order: 2; /* Пример порядка */
    width: 100%;
    max-width: 100%;
    margin-top: var(--panel-gap);
    /* height: auto; min-height: auto; */
  }
   /* По умолчанию левая панель скрыта в портретном режиме, как было в appView */
  #left-panel {
      display: none;
  }
  .three-column-layout.portrait-mode-layout #left-panel { /* Явное скрытие, если класс применен */
      display: none;
  }


  #right-panel.portrait-mode-layout {
    order: 3; /* После центральной панели */
    width: 100%;
    max-width: 100%; /* Занимает всю ширину */
    height: auto; /* Высота по содержимому */
    min-height: auto;
    /* border-left: none; border-right: none; */ /* Уже убрано из-за gap */
    /* border-top: 1px solid var(--color-border); /* Можно добавить, если нужно визуальное разделение */
    /* margin-top: var(--panel-gap); /* Заменено на gap родителя */
    padding: 15px;
    box-shadow: none; /* Убираем тень в портретном режиме для экономии */
  }

  #center-panel-resizable-wrapper.portrait-mode-layout {
    order: 1; /* Центральная панель (доска) сверху */
    width: var(--calculated-board-size-vh) !important; /* Ширина все еще от JS */
    height: var(--calculated-board-size-vh) !important; /* Высота все еще от JS */
    /* max-width: 100%; /* Это может конфликтовать с var(--calculated...) */
    min-width: unset; /* Сбрасываем, если был */
    /* margin-bottom: var(--panel-gap); /* Отступ снизу до следующей панели */
  }

  /* #board-wrapper.portrait-mode-layout не требует спец. стилей, т.к. он 100% от родителя */

  .nav-toggle-button { display: block; }
  .nav-links {
    display: none; /* Скрыто по умолчанию в мобильном виде */
    position: absolute;
    top: var(--header-height); /* Появляется под хедером */
    left: 0;
    width: 100%;
    background-color: var(--color-bg-secondary);
    flex-direction: column;
    box-shadow: 0 4px 10px rgba(0,0,0,0.3);
    padding: 5px 0; /* Небольшие отступы для ссылок */
  }
  #app-header.menu-open .nav-links {
    display: flex; /* Показываем при открытом меню */
  }
  .nav-links li {
      margin-left: 0;
      width: 100%;
  }
  .nav-links li a {
      padding: 12px 15px; /* Увеличиваем кликабельную область */
      text-align: left;
      border-bottom: 1px solid var(--color-border);
  }
   .nav-links li:last-child a {
       border-bottom: none;
   }
}

/* Стили для кнопок (остаются без изменений) */
.button {
  padding: 8px 15px;
  border-radius: 4px;
  border: 1px solid var(--color-border-hover);
  background-color: var(--color-bg-tertiary);
  color: var(--color-text-default);
  cursor: pointer;
  font-size: 0.95em;
  transition: background-color 0.2s ease, border-color 0.2s ease;
  text-align: center;
}
.button:hover:not(:disabled) {
  background-color: var(--color-border-hover);
  border-color: var(--color-accent-primary);
}
.button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}
.button.primary-button {
  background-color: var(--color-accent-primary);
  border-color: var(--color-accent-primary);
  color: var(--color-text-on-accent);
}
.button.primary-button:hover:not(:disabled) {
  background-color: var(--color-accent-warning);
  border-color: var(--color-accent-warning);
}

/* Стили для информации о пазле и PGN (остаются без изменений) */
.puzzle-container {}

.puzzle-details, .expected-move {
  font-size: 0.9em;
  margin-top: 5px;
  margin-bottom: 5px;
}

.puzzle-left-content .info-item {
  margin-bottom: 8px;
}
.puzzle-left-content .info-label {
  font-weight: 600;
  color: var(--color-text-muted);
}
.puzzle-left-content .info-value {
  color: var(--color-text-default);
  margin-left: 5px;
}

#pgn-display-container {
  font-family: monospace, "Courier New", Courier;
  white-space: pre-wrap;
  border: 1px solid var(--color-border);
  padding: 10px;
  background-color: var(--color-bg-tertiary);
  border-radius: var(--panel-border-radius);
  overflow-y: auto;
  flex-grow: 1;
  min-height: 100px; /* Минимальная высота для PGN блока */
  font-size: 0.9em;
}

/* Стили для активной кнопки анализа (остаются без изменений) */
.button.active-analysis {
  background-color: var(--color-accent-info);
  border-color: var(--color-accent-info);
  color: var(--color-text-on-accent);
}
.button.active-analysis:hover:not(:disabled) {
  background-color: #005f92;
  border-color: #005f92;
}

/* Стили для группы кнопок в правой панели (если нужно) */
.button-group {
    display: flex;
    flex-direction: column; /* Кнопки в столбик */
    gap: 10px; /* Отступ между кнопками */
}
.button-group .button { /* Чтобы кнопки в группе занимали всю ширину */
    width: 100%;
}

/* Стили для навигационных кнопок PGN */
#pgn-navigation-controls.button-group {
    flex-direction: row; /* Кнопки навигации в ряд */
    justify-content: space-between;
    gap: 5px;
    margin-bottom: 10px;
}
#pgn-navigation-controls.button-group .button.pgn-nav-button {
    flex-grow: 1; /* Кнопки делят доступное пространство */
    padding: 6px 8px; /* Немного меньше padding для компактности */
    font-size: 0.85em;
}
