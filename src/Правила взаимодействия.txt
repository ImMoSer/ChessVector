# Правила взаимодействия:

- Когда я говорю **"обсудим концепт"**, мы говорим об общем подходе и архитектуре.
- Когда я говорю **"пиши код"**, ты предоставляешь запрошенный код в канвасе.
- в первой строке каждого модуля пиши локацию модуля в проекте, например:  // src/core/chess-logic.service.ts
- когда говорим о компонентах, например ChessBoard.ts, всегда узазывай локацию. например //.env , или // src/types/global.d.ts.
- Коммуникация на русском, коротко и ясно без длинных разъяснений. Будь краток, это экономит токены.

# Инструкция для написания кода
- пиши код в отдельных канвасах для каждого модуля, один модуль в одном сообщении.
- давай ссылки на обновленные канвасы
- избегай ошибок связанных с "is declared but never used"
- код должен быть максимально чистым без излишних комментариев или примеров кода внутри самого кода.

# Источники:
## папка src с текущим состоянием кода
## для ознокомления по вопросам апи и типизации смотри файлы в папке src\@types. там ты найдешь 
    chessground.txt
    chessops.txt
    snabbdom.txt
- используй правила данные в текстовых файлах для написания правильного кода!

# Первое задание:
- Ознакомся с состянием текущего, его функционалом и зависимостями!
- доложи готовность к получению инструкций! (Скажи: "Привет Мозер, я готов!")